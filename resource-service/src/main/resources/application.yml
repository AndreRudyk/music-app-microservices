spring:
  application:
    name: resource-service
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB
  cloud:
    stream:
      bindings:
        resourceUploaded-out-0:
          destination: resource-uploaded
        resourceProcessed-in-0:
          destination: resource-processed
          group: resource-service-group
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 1000
            backOffMaxInterval: 10000
            backOffMultiplier: 2.0
            defaultRetryable: true
      rabbit:
        bindings:
          resourceUploaded-out-0:
            producer:
              routing-key-expression: '''resource-uploaded'''
          resourceProcessed-in-0:
            consumer:
              binding-routing-key: resource-processed


  datasource:
    url: ${RESOURCE_DB_URL:jdbc:postgresql://localhost:5432/resource-db}
    driverClassName: org.postgresql.Driver
    username: ${POSTGRES_USER_RESOURCE:user8080}
    password: ${POSTGRES_PASSWORD_RESOURCE:password8080}

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}

server:
  port: 8080
  servlet:
    context-path: /resource-service

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

aws:
  endpoint: ${AWS_S3_ENDPOINT:http://localhost:4566}
  region: us-east-1
  access-key-id: test
  secret-access-key: test

resilience4j:
  circuitbreaker:
    instances:
      storageService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - feign.FeignException
    configs:
      default:
        slidingWindowSize: 100
        minimumNumberOfCalls: 10

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus

  health:
    circuitbreakers:
      enabled: true
    group:
      custom:
        include: circuitBreakers
        show-components: always
        show-details: always
  tracing:
    sampling:
      probability: 1.0

logging:
  level:
    org.springframework.boot.actuate: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{traceId:-}] %-5level [%thread] %logger{36} - %msg%n"
